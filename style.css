@charset "UTF-8";

/* chamando fonte baixada no computador */
@font-face {
    /* nomeando a fonte (nome é da sua escolha) */
    font-family: "mao";
    /* mostrando aonde está a fonte no computador e dizendo qual o seu formato (fiz alguns testes e aparentemente não é necessário dizer qual é o formato */
    src: url("fonts/DancingScript-VariableFont_wght.ttf") format("truetype");
}

@font-face {
    font-family: "android";
    /* aqui vou deixar em comentário o formato */
    src: url("fonts/idroid.otf") /* format("opentype") */;
}

/*      
    cores do projeto
    verde: 3dbf2f
    branco: f4f4f4
*/

/* GENERAL STYLE */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: #000;
    height: 100vh;
}

.interface {
    max-width: 1280px;
    /* centraliza */
    margin: auto;
}

.flex {
    /* deixa os elementos um do lado do outro */
    display: flex;
}

h2.title {
    color: #fff;
    font-size: 38px;
    text-align: center;
}

h2.title span {
    color: #3dbf2f;
}

.btn_contato button {
    padding: 10px 30px;
    font-size: 18px;
    font-weight: 600;
    background-color: #3dbf2f;
    border: 0;
    border-radius: 30px;
    /* quando vc passa o mouse, por cima dessa tag, muda o cursor para a mãozinha */
    cursor: pointer;
    /* tempo para fazer a transição */
    transition: .3s;
}

button:hover {
    box-shadow: 0px 0px 8px #3dbf2f;
    /* transforma o tamanho em uma escala maior ou menor da original, conforme o valor que vc coloca dentro dos parenteses */
    transform: scale(1.08);
}

.btn_social button {
    /* height background image */
    height: 60px;
    /* width background image */
    width: 60px;
    background-color: #3dbf2f;
    border-radius: 50%;
    border: none;
    /* tamanho da imgaem */
    font-size: 25px;
    cursor: pointer;
    margin: 0 10px;
    transition: .3s;
}

.logo img {
    height: 75px;
    transition: .3s;
}

.logo img:hover {
    /* transforma o tamanho em uma escala maior ou menor da original, conforme o valor que vc coloca dentro dos parenteses */
    transform: scale(1.08);
    
}

/* HEADER STYLE */
header {
    padding: 100px 4%;
}

header .interface {
    /* deixa os elementos um do lado do outro */
    display: flex;
    /* alinha os elementos entre eles (centralização vertical) */
    align-items: center;
    /* alinha os elementos com espaçoes iguais entre eles (centralização horizontal) */
    justify-content: space-between;
}

header a {
    color: #7d7d7d;
    text-decoration: none;
    display: inline-block;
    transition: .3s;
}

header li a:hover {
    color: #fff;
    /* transforma o tamanho em uma escala maior ou menor da original, conforme o valor que vc coloca dentro dos parenteses */
    transform: scale(1.08);
}

header nav.menu_desktop ul li {
    /* comando para tirar a bolinha (disc) que vem como padão na lista */
    list-style-type: none;
    /* deixa os elementos um do lado do outro (nesse caso não funcionou o display: flex;) */
    display: inline-block;
    padding: 0 50px;
}

/* STYLE MOBILE MENU */
.btn_abrir_menu i {
    color: #3dbf2f;
    font-size: 40px;
}

.menu_mobile {
    background-color: #000;
    height: 100vh;
    /* comando para deixar fixo o menu, porém ele não ocupa mais toda a vh */
    position: fixed;
    /* para o menu ocupar toda a vh */
    top: 0;
    /* para o menu ocupar toda a vw, porém a imagem ainda fica na frente do menu */
    right: 0;
    /* deixa o menu frente/por cima de todos os elementos do site */
    z-index: 9999999;
    /* para deixar o menu com um respiro do lado esquerdo */
    width: 0%;
    overflow: hidden;
    transition: .5s;
}

.menu_mobile.abrir_menu {
    width: 70%;
}

/* o "~" significa que sempre que aacontecer o evento antes do "~", o evento após o "~" acontecerá tbm. Exemplo: evento 1 ~ evento 2 */
.menu_mobile.abrir_menu ~ .overlay_menu {
    display: block;
}

.menu_mobile .btn_fechar {
    padding: 20px 6%;
}

.menu_mobile .btn_fechar i {
    color: #3dbf2f;
    font-size: 30px;
}

.menu_mobile nav ul {
    text-align: right;
    list-style-type: none;

}

.menu_mobile nav ul li a {
    font-size: 20px;
    padding: 20px 8%;
    display: block;
}

.menu_mobile nav ul a:hover {
    background-color: #3dbf2f;
    color: #000;
}

.overlay_menu {
    background-color: #000000ce;
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 88888;
    display: none;
}

/* TOP STYLE */
section.top_site {
    padding: 100px 4%;
}

img.eu {
    height: 300px;
    /* border-radius: 80px 100px 100px 100px;
    box-shadow: 0 0 8px 8px #3dbf2f; */
}

section.top_site .flex {
    align-items: center;
    /* não estava fazendo nada então removi */
    /* justify-content: center; */

    /* espaço entre os elementos */
    gap: 300px;
}

.top_site h1 {
    color: #fff;
    font-size: 42px;
    line-height: 30px;
    font-family: "android", Arial, Helvetica, sans-serif;
}

.top_site h1 span {
    color: #3dbf2f;
    font-size: 70px;
}

.top_site .txt_top_site p {
    color: #fff;
    padding: 50px 0;
    font-family: 'Courier New', Courier, monospace;
    font-size: 20px;
    text-align: justify;
    text-indent: 30px;
}

/* chama a função flutuar */
.top_site .img_top_site img {
    /* a animação só funciona se o position for diferente de static, tem que ser relative, absolute, etc. (nesse caso foi usado o relative, para a imagem ficar dentro dos parametros estabelecidos no site */
    position: relative;
    /* 2s (é o tempo de duração da animação)
        ease-in-out (cadencia o movimento)
        infinite (é quantas vezes vai ser feito o movimento)
        alternate (é para o movimento alternar, debaixo para cima e de cima para baixo) */
    animation: flutuar 2s ease-in-out infinite alternate;
}

/* função flutuar */
@keyframes flutuar {
    /* quando começa a animação */
    0% {
        /* posição de onde vai começar a animação */
        top: 0;
    }

    /* quando termina a animação */
    100% {
        /* posição aonde irá terminar a animação */
        top: 30px;
    }
}

/* STYLE OF SPECIALTIES */
section.specialties {
    padding: 150px 4%;
}

section.specialties .flex {
    gap: 60px;
}

.specialties .specialties_box {
    color: #fff;
    padding: 40px;
    border-radius: 20px;
    margin-top: 40px;
    transition: .3s;
}

.specialties .specialties_box p {
    text-indent: 30px;
    text-align: justify;
}

.specialties .specialties_box:hover {
    transform: scale(1.05);
    box-shadow: 0 0 30px #fff;
}

.specialties_box i {
    font-size: 70px;
    color: #3dbf2f;
}

.specialties h3 {
    font-size: 30px;
    padding: 20px 0;
}

/* ABOUT STYLE */
section.about {
    padding: 180px 4%;
}

.about img {
    height: 400px;
    border-radius: 30px;
}

.about .flex {
    align-items: center;
    gap: 60px;
}

.about .txt_about {
    color: #fff;
}

.about .txt_about h2 {
    font-size: 45px;
    /* distancia de altura entre as linhas */
    line-height: 50px;
    padding-bottom: 30px;
}

 .about .txt_about h2 span {
    font-family: "mao", 'Courier New', Courier, monospace;
    color: #3dbf2f;
    display: block;
    font-size: larger;
 }

 .about .txt_about p {
    padding: 20px 0;
    text-align: justify;
    text-indent: 30px;
 }

 /* PORTFOLIO STYLE */
section.portfolio {
    padding: 100px 4%;
    box-shadow: 0 0 20px 5px #ffffff3c;
}

section.portfolio .flex{
    /* da um espaço padrão entre as boxs */
    justify-content: space-around;
    padding-top: 60px;
}

.img_port {
    width: 360px;
    height: 460px;
    background-image: url(images/github.jpeg);
    /* tenta enquadrar a imagem da melhor forma */
    background-size: cover;
    /* a primeira posição que está 100% é o valor do width e o segundo valor que está 0% é o height */
    background-position: 100% 0%;
    /* os 30s é o tempo da animação, o ease-out é a cadencia, ease-in-out (tinha muita aceleração no in/meio) */
    transition: 30s ease-out;
    cursor: pointer;
    border-radius: 30px;
    position: relative;
}

.img_port2 {
    width: 360px;
    height: 460px;
    background-color: #fff;
    background-image: url(images/facebook.jpg);
    background-size: cover;
    background-position: 100% 0%;
    transition: 55s ease-out;
    border-radius: 30px;
    position: relative;
}

.img_port3 {
    width: 360px;
    height: 460px;
    background-color: #fff;
    background-image: url(images/instagram.jpeg);
    background-size: cover;
    background-position: 100% 0%;
    transition: 15s ease-out;
    border-radius: 30px;
    position: relative;
}

.img_port:hover {
    background-position: 100% 100%;
}

.img_port2:hover {
    background-position: 100% 100%;
}

.img_port3:hover {
    background-position: 100% 100%;
}

.overlay {
    position: absolute;
    height: 100%;
    width: 100%;
    /* a borda do absolute fica dentro da borda relativa */
    border-radius: inherit;
    background-color: #00000089;
    color: #fff;
    display: flex;
    /* alinhamento vertical */
    align-items: center;
    /* alinhamento vertical */
    justify-content: center;
    font-size: 30px;
    font-weight: 900;
    font-family: "mao", Arial, Helvetica, sans-serif;
    /* opacidade */
    opacity: 0;
    transition: .5s;
}

.overlay:hover {
    opacity: 1;
}

/* FOOTER STYLE */
footer {
    padding: 80px 4%;
}

.line_footer {
    display: flex;
    /* separa as boxs/elementos com espaço horizontal igual entre as mesmas */
    justify-content: space-between;
    padding: 30px 0;
}

.line_footer p i {
    color: #3dbf2f;
    font-size: 25px;
}

.line_footer p a {
    color: #fff;
    text-decoration: none;
    font-size: 25px;
}

.line_footer p a:hover {
    text-decoration: underline;
}

.border {
    border-bottom: 2px solid #3dbf2f;
}